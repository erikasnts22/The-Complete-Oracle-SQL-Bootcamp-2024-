/***************************************************************
 * 	 		Conversion Functions     		*
 ***************************************************************/

-- Implicit conversion from a VARCHAR2 value to a NUMBER value
SELECT * FROM employees WHERE salary > '5000';

-- Implicit conversion from a VARCHAR2 value to a DATE value
SELECT * FROM employees WHERE hire_date = '17-JUN-03';

-- Implicit conversion from a NUMBER to a VARCHAR2 value
SELECT department_id || department_name FROM departments;

-- Implicit conversion  from a DATE value to a VARCHAR2 value
SELECT first_name || sysdate FROM employees;


SELECT first_name, last_name, TO_CHAR(hire_date, 'YYYY') 
FROM employees WHERE TO_CHAR(employee_id) = '100';

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'YY') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'RR') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'YY') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'YEAR') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'MM') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'MON') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'MONTH') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'DD') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'DY') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'DAY') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'Dy-Month-YYYY') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'HH12') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'HH24:MI') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'HH24:MI:SS') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(SYSDATE, 'HH24:MI:SS') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'DDTH') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'DDSP') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'DDSPTH') AS "Formatted Date"
FROM employees;

SELECT first_name, hire_date,
TO_CHAR(hire_date, 'DDTHSP') AS "Formatted Date"
FROM employees;

SELECT TO_CHAR(salary, '$99,999.99') AS "Formatted Salary", salary
FROM employees;

SELECT salary, salary * commission_pct * 100,
TO_CHAR(salary * commission_pct * 100, '$999,999.00') AS "Formatted Salary"
FROM employees
WHERE commission_pct IS NOT NULL;

SELECT TO_NUMBER('$6,152.21', '$99,999.99') AS "Formatted Number"
FROM DUAL;

SELECT first_name, last_name, TO_CHAR(hire_date, 'DDSPTH Month YYYY') AS "Hire Date"
FROM employees
WHERE hire_date > TO_DATE('Jun 12, 2000','Mon DD, YYYY');

SELECT job_id, first_name, last_name, commission_pct, NVL(commission_pct,0) AS "NVL_comm_pct"
FROM employees
WHERE job_id IN('SA_REP', 'IT_PROG');

SELECT employee_id, salary, commission_pct, salary + salary * NVL(commission_pct,0) AS "NVL_new_salary"
FROM employees;

SELECT job_id, first_name, last_name, commission_pct, NVL2(commission_pct, 'has', 'has not') NVL2_example
FROM employees WHERE job_id IN('SA_REP','IT_PROG') 
ORDER BY commission_pct NULLS LAST;

SELECT first_name, last_name,
LENGTH(first_name) AS LEN1, LENGTH(last_name) AS LEN2,
NULLIF(LENGTH(first_name), LENGTH(last_name)) AS "Result"
FROM employees;

SELECT first_name, last_name,
LENGTH(first_name) AS LEN1, LENGTH(last_name) AS LEN2,
NULLIF(LENGTH(first_name), LENGTH(last_name)) AS "Result"
FROM employees
WHERE NULLIF(LENGTH(first_name), LENGTH(last_name)) IS NULL;

SELECT COALESCE(null, null, null, 1, 2, 3, null) FROM DUAL;

SELECT COALESCE(null, null, null, null) FROM DUAL;

SELECT state_province, city, COALESCE(state_province, city)
FROM locations;
